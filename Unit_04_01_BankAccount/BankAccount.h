#pragma once

#include <string>

class BankAccount {
private:
    std::string accountNumber;
    std::string ownerName;
    double balance;

    // static members declared here, defined in BankAccount.cpp
    static unsigned long nextAccountId;
    static unsigned long activeAccounts;

    static std::string generateAccountNumber();

public:
    // Default constructor: creates an account with autogenerated account number
    BankAccount();

    // Parameterized constructor: takes an owner name and initial balance
    // and assigns a unique account number automatically.
    BankAccount(const std::string& name, double initialBalance);

    // Destructor: decrement active account count and print a message
    ~BankAccount();

    void deposit(double amount);
    void withdraw(double amount);
    void displayBalance() const;
    void printAccountInfo() const;

    // Transfer amount from this account to toAccount if possible.
    // Returns true on success, false otherwise.
    bool transfer(BankAccount& toAccount, double amount);

    // Accessors
    const std::string& getOwnerName() const;
    const std::string& getAccountNumber() const;
    double getBalance() const;

    // Static accessor for active account count
    static unsigned long getTotalAccounts();
};
